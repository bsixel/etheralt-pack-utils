buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'commons-io:commons-io:2.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'


jar {
    classifier = 'original'
}

archivesBaseName = jarName

repositories {
    maven { url = "http://files.minecraftforge.net/maven" } // spongeforge
    maven {
        name "tinkers+jei+mantle"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "Crafttweaker etc Maven"
        url "http://maven.blamejared.com"
    }
    maven { url = "http://maven.cil.li/" }
    maven {
        name = 'oss-sonatype-public'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url "https://maven.chaosfield.at"
    }
    maven {
        url "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        url "http://maven.mcmoddev.com"
    }
    maven { url = "http://maven.ic2.player.to" }
    maven { url = "http://repo.spongepowered.org/maven" }
    maven { url = "http://cc.crzd.me/maven/" }
    maven { url = "https://archiva-repository.apache.org/archiva/repository/snapshots" }
    maven {
        name = 'CoFH Maven'
        url = 'http://maven.covers1624.net'
    }
    maven {
        url "https://tehnut.info/maven"
    }
    maven { url = "http://cc.crzd.me/maven/" }
    maven { url = "https://archiva-repository.apache.org/archiva/repository/snapshots" }
    flatDir {
        dirs "lib"
    }
}

def mcVersion = '1.12.2'
def jeiVersion = '4.16.1.302'
dependencies {

    runtime "slimeknights.mantle:Mantle:1.12-1.3.3.55"
    compile "slimeknights:TConstruct:1.12.2-2.13.0.183"

    // Recommended by TConstruct crew
    runtime "mezz.jei:jei_${mcVersion}:${jeiVersion}:api"
    compile "mezz.jei:jei_${mcVersion}:${jeiVersion}"

    compile "cofh:RedstoneFlux:1.12-2.1.0.7:universal"

    compile files("./libs/geneticsreborn-1.12-1.29.jar")
    compile files("./libs/Nutrition-1.12.2-4.6.1.jar")
    compile files("./libs/SGCraft-2.0.5.jar")
    compile files("./libs/VillageNames-1.12.2-4.1.1.jar")

    //deobfCompile "codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal"
    //deobfCompile "cofh:CoFHCore:1.12.2-4.6.3.27:universal"
    //deobfCompile "cofh:CoFHWorld:1.12.2-1.3.1.7:universal"
    //deobfCompile "cofh:ThermalExpansion:1.12.2-5.5.3.41:universal"
    //deobfCompile "cofh:ThermalFoundation:1.12.2-2.6.2.26:universal"
    //deobfCompile "cofh:ThermalDynamics:1.12.2-2.5.5.21:universal"
    deobfCompile ('net.malisis:malisiscore:1.12.2-6.4.0') {
        transitive = false
    }
    /*deobfCompile ('com.almuradev:malisiscore:1.12.2-6.4.3-SNAPSHOT-dev') {
        transitive = false
    }*/
}

deobfMcMCP { failOnAtError = false }
deobfMcSRG { failOnAtError = false }

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "run"
    mappings = 'snapshot_20180808'
    useDepAts = true
    makeObfSourceJar = false
}

sourceSets.main {
    compileClasspath += files("lib")
    java.srcDirs "src/base", "src/mod"
    resources.srcDirs "src/resources"
}

processResources {

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.mcversion

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'modid':project.jarName
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    mainSpec.sourcePaths.clear()
    dependsOn reobfJar

    classifier ''

    exclude 'dummyThing'
    relocate 'com.typesafe.config', 'configurate.typesafe.config'
    dependencies {
        include dependency('org.spongepowered:configurate-core')
        include dependency('org.spongepowered:configurate-yaml')
        include dependency('org.yaml:snakeyaml')
    }
    afterEvaluate {
        from zipTree(reobfJar.jar)
    }
}

artifacts {
    archives shadowJar
}